# -*- coding: utf-8 -*-
"""Diabetes Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11pIkWA4LcORgaaa9CdDZ_VT2HWJSYZut

# EDA and Predictions on Diabeties data

## importing libs
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""## load data


"""

data = pd.read_csv('diabetes.csv')
data.head()

"""## checking for null values

"""

print(data.isnull().sum())

"""## summary of data"""

print(data.describe())

"""## Data Visualization"""

# data.hist(bins=15, figsize=(15, 10), color='blue', edgecolor='black')
# plt.show()

# sns.pairplot(data, hue='Outcome', diag_kind='kde')
# plt.show()

# plt.figure(figsize=(15, 10))
# sns.boxplot(data=data, orient='h')
# plt.show()

# plt.figure(figsize=(10, 8))
# sns.heatmap(data.corr(), annot=True, cmap='coolwarm', fmt='.2f')
# plt.show()

# sns.countplot(x='Outcome', data=data)
# plt.show()

"""## Creating some models with this data

### importing ml libs
"""

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report, roc_auc_score, roc_curve
from sklearn.tree import DecisionTreeClassifier
import joblib

"""## spliting data into X ( features ) and y ( target )"""

X = data.drop('Outcome', axis=1)
y = data['Outcome']

"""## now spliting the data into train and test sets

"""

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42, stratify=y)

"""## feature scaling"""

scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

"""## model"""

dt_model = DecisionTreeClassifier()
dt_model.fit(X_train, y_train)

"""## save the model"""

joblib.dump(dt_model, 'decision_tree_model.pkl')
joblib.dump(scaler, 'scaler.pkl')

print("Decision Tree model and scaler have been saved successfully.")